Question : https://practice.geeksforgeeks.org/problems/transitive-closure-of-a-graph0930/1?utm_source=gfg&utm_medium=article&utm_campaign=bottom_sticky_on_article

//{ Driver Code Starts
// Initial Template for C++

#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
// Back-end complete function Template for C++

class Solution{
public:
    bool transitiveClosure1( vector<vector<int>> &graph , vector<bool>& visited , int s , int e ){
        int n = graph.size();
        if(s == e){
            return true;
        }
        bool yes = false;
        for(int i=0;i<n;i++){
            if(visited[i] == false && graph[s][i] == 1){
            visited[i] = true;
            if(transitiveClosure1(graph,visited,i,e)){
                return true;
            }
            yes = yes || transitiveClosure1(graph,visited,i,e);
            
            }
        }
        return yes;
    }
    vector<vector<int>> transitiveClosure(int N, vector<vector<int>> graph)
    {
        
     
        for(int i=0;i<N;i++){
            for(int j=0;j<N;j++){
                if(graph[i][j] == 0){
                    vector<bool> visited(N,false);
                    visited[i] = true;
                    if(transitiveClosure1(graph,visited,i,j)){
                        graph[i][j] =1;
                    }
                    visited.clear();
                    
                }
            }
        }
        
        return graph;
    }
};

//{ Driver Code Starts.

int main(){
    int t;
    cin>>t;
    while(t--){
        int N;
        cin>>N;
        vector<vector<int>> graph(N, vector<int>(N, -1));
        for(int i = 0;i < N;i++)
            for(int j=0;j<N;j++)
            cin>>graph[i][j];
        
        Solution ob;
        vector<vector<int>> ans = ob.transitiveClosure(N, graph);
        for(int i = 0;i < N;i++)
            {for(int j = 0;j < N;j++)
                cout<<ans[i][j]<<" ";
        cout<<"\n";}
    }
    return 0;
}
// } Driver Code Ends

Mistakes Made : 
vector.clear() reduces the size of the vector to 0 . 
