https://practice.geeksforgeeks.org/problems/detect-cycle-in-a-directed-graph/1


Approach:1 . Getting TLE here . I just passed my new visited array each time .

//{ Driver Code Starts
#include <bits/stdc++.h>
using namespace std;

// } Driver Code Ends
class Solution {
  public:
    // Function to detect cycle in a directed graph.
    bool isCyclic1(int V, vector<int> adj[] , vector<bool> visited , int idx) {
        
        for(auto i : adj[idx]){
            if(visited[i] == true){
                return true;
            }
            else{
                visited[i] = true;
                if(isCyclic1(V,adj,visited,i)){
                    return true;
                }
            }
        }
        return false;
        
        
        
        
    }
    bool isCyclic(int V, vector<int> adj[]) {
        vector<bool> v(V,false);
        for(int i=0;i<V;i++){
            if(v[i] == false){
                v[i] = true;
                if(isCyclic1(V,adj,v,i)){
                    return true;
                }
               v[i] = false;
            
            }
            
        }
        return false;
        
    }
};

//{ Driver Code Starts.

int main() {

    int t;
    cin >> t;
    while (t--) {
        int V, E;
        cin >> V >> E;

        vector<int> adj[V];

        for (int i = 0; i < E; i++) {
            int u, v;
            cin >> u >> v;
            adj[u].push_back(v);
        }

        Solution obj;
        cout << obj.isCyclic(V, adj) << "\n";
    }

    return 0;
}

// } Driver Code Ends  

Approach-2:
